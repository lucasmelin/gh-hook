#!/usr/bin/env bash
set -e

# Determine if gum is in the PATH
if ! type -p gum >/dev/null; then
   echo "Gum not found on the system" >&2
   echo "See https://github.com/charmbracelet/gum#installation for installation instructions" >&2
   exit 1
fi

# Determine if jq is in the PATH
if ! type -p gum >/dev/null; then
   echo "jq not found on the system" >&2
   echo "See https://stedolan.github.io/jq/download/ for installation instructions" >&2
   exit 1
fi

# Determine if curl is in the PATH
if ! type -p curl >/dev/null; then
   echo "curl not found on the system" >&2
   exit 1
fi

createWebhook(){
    REPO=$(gh repo view --json nameWithOwner -q ".nameWithOwner")
    echo "Creating a new webhook for $REPO"
    WEBHOOK_URL=$(gum input --placeholder "Webhook URL")
    echo "Choose events to receive:"
    EVENTS=$(curl -L -s octokit.github.io/webhooks/payload-examples/api.github.com/index.json | jq '.[].name' -r | gum choose --no-limit)
    SECRET=$(gum input --password --prompt "Webhook secret (optional): ")
    echo "Payload content type:"
    CONTENT_TYPE=$(gum choose "json" "form")
    echo "Insecure SSL"
    INSECURE_SSL=$(gum choose "0" "1")
    echo "Webhook active"
    ACTIVE=$(gum choose true false)
    jq -n --arg EVENTS "$EVENTS" --arg WEBHOOK_URL "$WEBHOOK_URL" --arg SECRET "$SECRET" --arg CONTENT_TYPE "$CONTENT_TYPE" --arg INSECURE_SSL "$INSECURE_SSL" --argjson ACTIVE "$ACTIVE" '{"name":"web","active":$ACTIVE,"events":$EVENTS | split("\n"),"config":{"url": $WEBHOOK_URL,"content_type":$CONTENT_TYPE,"insecure_ssl":$INSECURE_SSL,"secret":$SECRET}}' | gh api repos/$REPO/hooks --jq '.id' --input -
}

# Call the function
createWebhook
